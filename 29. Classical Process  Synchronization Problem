 Write a C program to simulate the solution of Classical Process 
Synchronization Problem

#include<stdio.h>
#include<stdlib.h>

int mutex=1,full=0,empty=10,x=0;

void producer(){
	--mutex;
	++full;
	--empty;
	x++;
	printf("\nProducer produces item%d",x);
	++mutex;
}

void consumer(){
	--mutex;
	--full;
	++empty;
	printf("\nConsumer consumes item%d",x);
	x--;
	++mutex;
}

int main(){
	int n;
	printf("\n1.Press1forProducer\n2.Press2forConsumer\n3.Press3forExit");
	while(1){
		printf("\nEnteryourchoice:");
		scanf("%d",&n);
		switch(n){
			case 1:
				if((mutex==1)&&(empty!=0)){
					producer();
				}else{
					printf("Bufferisfull!");
				}
				break;
			case 2:
				if((mutex==1)&&(full!=0)){
					consumer();
				}else{
					printf("Bufferisempty!");
				}
				break;
			case 3:
				exit(0);
				break;
			default:
				printf("Invalidchoice!");
		}
	}
	return 0;
}
